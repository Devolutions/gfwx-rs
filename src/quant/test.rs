use super::*;

#[test]
fn test_quantize() {
    let mut image = vec![
        1, 0, 254, 0, 33, 0, 225, 0, 198, 247, 0, 0, 1, 0, 43, 127, 6, 120, 187, 133, 0, 0, 64, 35,
        8, 29, 143, 55, 52, 34, 0, 0, 43, 127, 226, 10, 148, 115, 225, 0, 4, 35, 59, 37, 161, 22,
        100, 28, 245, 1, 0, 127, 222, 10, 155, 131, 229, 0, 1, 0, 2, 36, 128, 254, 3, 101, 225, 0,
        57, 1, 1, 6, 123, 6, 194, 255, 1, 0, 1, 0,
    ];

    let expected = vec![
        1, 0, 31, 0, 8, 0, 28, 0, 198, 15, 0, 0, 0, 0, 2, 7, 0, 7, 11, 8, 0, 0, 8, 2, 1, 1, 17, 3,
        6, 2, 0, 0, 2, 7, 14, 0, 9, 7, 14, 0, 1, 2, 7, 2, 40, 1, 12, 1, 61, 0, 0, 7, 13, 0, 9, 8,
        14, 0, 0, 0, 0, 2, 16, 15, 0, 6, 28, 0, 7, 0, 0, 0, 7, 0, 12, 15, 0, 0, 0, 0,
    ];

    {
        let mut image: Vec<_> = image.chunks_mut(10).collect();
        quantize(&mut image, 512, 0, 8192);
    }
    assert_eq!(image, expected);
}

#[test]
fn test_dequantize() {
    let mut image = vec![
        1, 0, 254, 0, 33, 0, 225, 0, 198, 247, 0, 1, 0, 43, 127, 6, 120, 187, 133, 0, 0, 64, 35, 8,
        29, 143, 55, 52, 34, 0, 0, 43, 127, 226, 10, 148, 115, 225, 0, 0, 35, 59, 37, 161, 22, 100,
        28, 245, 1, 0, 127, 222, 10, 155, 131, 229, 0, 1, 0, 0, 36, 128, 254, 3, 101, 225, 0, 57,
        1, 0, 6, 123, 6, 194, 255, 1, 0, 1, 0, 0,
    ];

    let expected = vec![
        1, 0, 2036, 0, 134, 0, 1804, 0, 198, 3960, 0, 24, 0, 696, 2040, 104, 1928, 3000, 2136, 0,
        0, 1032, 284, 136, 236, 2296, 444, 840, 276, 0, 0, 696, 2040, 3624, 168, 2376, 1848, 3608,
        0, 0, 142, 952, 300, 2584, 90, 1608, 228, 3928, 6, 0, 2040, 3560, 168, 2488, 2104, 3672, 0,
        24, 0, 0, 292, 2056, 2036, 56, 812, 3608, 0, 920, 12, 0, 104, 1976, 104, 3112, 4088, 24, 0,
        24, 0, 0,
    ];

    {
        let mut image: Vec<_> = image.chunks_mut(10).collect();
        dequantize(&mut image, 512, 0, 8192);
    }
    assert_eq!(image, expected);
}
